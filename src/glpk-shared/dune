(library
 (name mccs_shared)
 (public_name mccs.shared)
 (implements mccs)
 (cxx_names changed_criteria constraint_generation count_criteria
   cudf_reductions cudf_tools glpk_solver lp_solver lexagregate_combiner
   new_criteria notuptodate_criteria removed_criteria mccscudf mccs_stubs)
 (cxx_flags
  :standard
  -I
  .
  (:include cxxflags.sexp))
 (c_library_flags
  :standard
  (:include clibs-shared.sexp)))

(copy_files# ../mccs/*.{cpp,h})

(rule
 (targets clibs-shared.sexp)
 (deps ../context_flags.ml)
 (action
  (with-stdout-to
   %{targets}
   (run ocaml %{deps} clibs))))

(rule
  (with-stdout-to config.h (echo "#include <glpk.h>")))

(rule
 (targets cxxflags.sexp clibs.sexp flags.sexp)
 (deps ../context_flags_all.ml (universe) config.h)
 (action
  (run ocaml %{deps})))

(rule
 (with-stdout-to glpk.ml (echo "")))
