(library
 (name mccs_internal)
 (public_name mccs.internal)
 (implements mccs)
 (modules glpk)
 (c_names ; Core GLPK
  bfd
  glpapi06
  glpapi09
  glpapi10
  glpapi12
  glpapi13
  glpios01
  glpios02
  glpios03
  glpios07
  glpios09
  glpios10
  glpios11
  glpios12
  glpnpp01
  glpnpp02
  glpnpp03
  glpnpp04
  glpnpp05
  glpscl
  ; api
  advbas
  cpxbas
  prob1
  prob2
  prob4
  prob5
  ; bflib
  btf
  btfint
  fhv
  fhvint
  fvs
  ifu
  luf
  lufint
  scf
  scfint
  sgf
  sva
  ; cglib
  cfg
  cfg1
  cfg2
  clqcut
  gmicut
  gmigen
  mirgen
  spv
  ; env
  alloc
  dlsup
  env
  error
  stdc
  stdout
  time
  tls
  ; misc
  avl
  dmp
  gcd
  jd
  mc13d
  mc21a
  rng
  rng1
  round2n
  triang
  wclique
  wclique1
  ; proxy
  proxy
  proxy1
  ; simplex
  spxat
  spxchuzc
  spxchuzr
  spxlp
  spxnt
  spxprim
  spxprob
  spychuzc
  spychuzr
  spydual)
 (cxx_names changed_criteria constraint_generation count_criteria
   cudf_reductions cudf_tools glpk_solver lp_solver lexagregate_combiner
   new_criteria notuptodate_criteria removed_criteria mccscudf mccs_stubs)
  (cxx_flags
  :standard
  -I
  .
  (:include cxxflags.sexp))
 (c_library_flags
  :standard
  (:include clibs.sexp))
 (library_flags
  :standard
  (:include flags.sexp))
 (c_flags
  :standard
  (:include cflags.sexp)))

(copy_files# api/*.{c,h})

(copy_files# bflib/*.{c,h})

(copy_files# cglib/*.{c,h})

(copy_files# env/*.{c,h})

(copy_files# misc/*.{c,h})

(copy_files# proxy/*.{c,h})

(copy_files# simplex/*.{c,h})

(copy_files# ../mccs/*.{cpp,h})

(rule
 (targets cflags.sexp)
 (deps ../context_flags.ml)
 (action
  (with-stdout-to
   %{targets}
   (run ocaml %{deps} cflags))))

(rule
 (targets cxxflags.sexp clibs.sexp flags.sexp)
 (deps ../context_flags_all.ml (universe) config.h)
 (action
  (run ocaml %{deps})))

(rule
  (with-stdout-to config.h (echo "#include \"glpk.h\"")))

(rule
 (with-stdout-to glpk.ml (echo "")))
